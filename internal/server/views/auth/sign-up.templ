package auth

import (
	"github.com/tumivn/goblog/internal/server/views/layout"
)

templ SignUp(data SignUpViewModel) {
  <div class="flex min-h-full flex-col justify-center px-6 py-12 lg:px-8">
    <div class="sm:mx-auto sm:w-full sm:max-w-sm">
    if len(data.ErrorMessage)>0 {
            <aside class="hideThis fixed z-50 flex items-center justify-center bg-orange-100 border-l-4 border-orange-500 text-orange-700 p-4 top-10 right-4">
                <p class="font-bold">Unable to sign up! </p>

                <p class="text-sm">
                   Reason: {data.ErrorMessage}
                </p>

                <button onClick="return this.parentNode.remove()" class="p-1 ml-3 rounded bg-white/20 hover:bg-white/10">
                    <svg xmlns="http://www.w3.org/2000/svg" class="w-4 h-4" viewBox="0 0 20 20" fill="currentColor">
                        <path fillRule="evenodd"
                            d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z"
                            clipRule="evenodd" />
                    </svg>
                </button>
            </aside>

             <div
              role="alert"
              data-dismissible="alert"
              class="hideThis fixed flex w-full max-w-screen-md px-4 py-4 text-base text-orange-700 bg-orange-100 border-l-4 border-orange-500 rounded-lg font-regular bottom-1 right-1">
              <div class="shrink-0">
                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" class="w-6 h-6">
                  <path fill-rule="evenodd"
                    d="M2.25 12c0-5.385 4.365-9.75 9.75-9.75s9.75 4.365 9.75 9.75-4.365 9.75-9.75 9.75S2.25 17.385 2.25 12zm13.36-1.814a.75.75 0 10-1.22-.872l-3.236 4.53L9.53 12.22a.75.75 0 00-1.06 1.06l2.25 2.25a.75.75 0 001.14-.094l3.75-5.25z"
                    clip-rule="evenodd"></path>
                </svg>
              </div>
              <div class="ml-3 mr-12">
                <h5 class="block font-sans text-xl antialiased font-semibold leading-snug tracking-normal">
                  Unable to sign up!
                </h5>
                <p class="block mt-2 font-sans text-base antialiased font-normal leading-relaxed">
                  {data.ErrorMessage}
                </p>
              </div>
              <button onClick="return this.parentNode.remove()"
               data-dismissible-target="alert"
                class="!absolute top-3 right-3 h-8 max-h-[32px] w-8 max-w-[32px] select-none rounded-lg text-center align-middle font-sans text-xs font-medium uppercase transition-all hover:bg-white/10 active:bg-white/30 disabled:pointer-events-none disabled:opacity-50 disabled:shadow-none"
                type="button">
                <span class="absolute transform -translate-x-1/2 -translate-y-1/2 top-1/2 left-1/2">
                  <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor" class="w-6 h-6"
                    stroke-width="2">
                    <path stroke-linecap="round" stroke-linejoin="round" d="M6 18L18 6M6 6l12 12"></path>
                  </svg>
                </span>
              </button>
            </div>
      }
      <h2 class="mt-10 text-center text-2xl font-bold leading-9 tracking-tight text-gray-900">Sign up</h2>
    </div>
    <div class="mt-10 sm:mx-auto sm:w-full sm:max-w-sm" x-data="{email: $refs.email.value, password: '', confirmPassword: '', firstName: '', lastName: '', passwordPattern: /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[@$!%*?])[A-Za-z\d@$!%*?]{8,}$/, showPassword: false, emailPattern: /^([A-Za-z0-9_\-\.])+\@([A-Za-z0-9_\-\.])+\.([A-Za-z]{2,4})$/}">
      <form class="space-y-6" action="/auth/login" method="POST">
        <div>
                <label for="firstname" class="block text-sm font-medium leading-6 text-gray-900">Firstname</label>
                <div class="mt-2">
                  <input id="text" x-model="firstname" x-ref="firstname" value={data.Firstname}  name="firstname" type="text" required class="block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6">
                  <p x-show="!firstname" class="text-red-500">Firstname is required</p>
                </div>
              </div>
        <div>
                        <label for="lastname" class="block text-sm font-medium leading-6 text-gray-900">Lastname</label>
                        <div class="mt-2">
                          <input id="text" x-model="lastname" x-ref="lastname" value={data.Lastname}  name="lastname" type="text" required class="block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6">
                          <p x-show="!lastname" class="text-red-500">Lastname is required</p>
                        </div>
                      </div>
                <div>
          <label for="email" class="block text-sm font-medium leading-6 text-gray-900">Email address</label>
          <div class="mt-2">
            <input id="email" x-model="email" x-ref="email" value={data.Email}  name="email" type="email" autocomplete="email" required class="block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6">
            <p x-show="!email" class="text-red-500">Email is required</p>
            <p x-show="email && !emailPattern.test(email)" class="text-red-500">Email is not valid</p>
          </div>
        </div>

        <div>
          <div class="flex items-center justify-between">
            <label for="password" class="block text-sm font-medium leading-6 text-gray-900">Password</label>
          </div>
          <div class="mt-2">
            <input id="password" x-model="password" name="password" type="password" autocomplete="current-password" required class="block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6">
            <p x-show="!password" class="text-red-500">Password is required.</p>
            <p x-show="password && !passwordPattern.test(password)" class="text-red-500">Password must have minimum eight characters, at least one uppercase letter, one lowercase letter, one number and one special character (@$!%*?).</p>
          </div>
        </div>
        <div>
                  <div class="flex items-center justify-between">
                    <label for="confirmPassword" class="block text-sm font-medium leading-6 text-gray-900">Confirm Password</label>
                  </div>
                  <div class="mt-2">
                    <input id="confirmPassword" x-model="confirmPassword" name="confirmPassword" type="password" required class="block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6">
                    <p x-show="!confirmPassword" class="text-red-500">Confirm Password is required.</p>
                    <p x-show="password && (confirmPassword !== password)" class="text-red-500">Confirm Password must have the same value with Password</p>
                  </div>
                </div>

        <div>
          <button type="submit" :disabled="(email && !emailPattern.test(email)) || (password && !passwordPattern.test(password))" class="flex w-full justify-center rounded-md bg-indigo-600 px-3 py-1.5 text-sm font-semibold leading-6 text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600">Sign in</button>
        </div>
      </form>
    </div>
  </div>
}

templ SignUpIndex(title string, component templ.Component){
    @layout.Base(title,nil, component)
}